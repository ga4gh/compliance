<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.ga4gh</groupId>
    <artifactId>ctk-parent</artifactId>
    <version>${compliance.version}</version>

    <packaging>pom</packaging>

    <inceptionYear>2015</inceptionYear>
    <organization>
        <name>Global Alliance for Genomics and Health</name>
        <url>http://genomicsandhealth.org</url>
    </organization>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:https://github.com/wstidolph/ctk-core</connection>
        <developerConnection>scm:git:https://github.com/wstidolph/ctk-core</developerConnection>
        <url>https://github.com/wstidolph/ctk-core</url>
    </scm>


    <properties>
        <compliance.version>0.6.0a7</compliance.version>
        <!--
          Use this section to indicate the repository and branch of schemas
          your tests will be compiled against.
          To use your own version of the schemas, change the groupId to your
          github account (e.g. com.github.david4096).
          Then change the schemas.version to be the commit hash, release, 
          or branch snapshot you would like to test.
        -->
        <ga4gh.schemas.groupId>com.github.ga4gh</ga4gh.schemas.groupId>
        <ga4gh.schemas.version>master-SNAPSHOT</ga4gh.schemas.version>
        <ga4gh.schemas.artifactId>schemas</ga4gh.schemas.artifactId>
        <ctk.tgt.urlRoot>http://localhost:8000</ctk.tgt.urlRoot>
        <!-- Controls skipping of cts-java IT tests during build; skip the tests by passing
             a command line parameter, e.g. mvn -Dcts.skipITs=true install.  Run them by default. -->
        <cts.skipITs>true</cts.skipITs>

        <java.version>1.8</java.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <ant.version>1.9.5</ant.version>
        <assertj.core.version>3.1.0</assertj.core.version>
        <assertj.generator.version>2.0.0</assertj.generator.version>
        <proto.version>3.0.0-beta-3</proto.version>
        <bcel.version>6.0</bcel.version>
        <gson.version>2.3.1</gson.version>
        <guava.version>18.0</guava.version>
        <httpasyncclient.version>4.1</httpasyncclient.version>
        <httpclient.version>4.4.1</httpclient.version>
        <httpmime.version>4.4.1</httpmime.version>

        <json-patch.version>1.9</json-patch.version>
        <jsonassert.version>1.2.3</jsonassert.version>
        <junit.version>4.12</junit.version>
        <junitparams.version>1.0.4</junitparams.version>
        <junit-toolbox.version>2.1</junit-toolbox.version>

        <log4j2.version>2.3</log4j2.version>
        <maven.project.info.reports.version>2.8</maven.project.info.reports.version>
        <org.json.json.version>20141113</org.json.json.version>
        <slf4j.version>1.7.12</slf4j.version>
        <spring.boot.version>1.3.0.M2</spring.boot.version>
        <tap4j-ext.version>4.1</tap4j-ext.version>
        <unirest-java.version>1.4.5</unirest-java.version>
    </properties>

    <repositories>
        <!-- apache snapshots, we need BCEL 6.0-SNAPSHOT -->
        <repository>
            <id>Apache</id>
            <url>http://repository.apache.org/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <url>http://repo.spring.io/milestone</url>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/snapshot</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <url>http://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <!-- Support for common test dependencies, including JUnit, Hamcrest
                and Mockito along with the spring-test module. -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant-junit</artifactId>
                <version>${ant.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant-junit4</artifactId>
                <version>${ant.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant-apache-log4j</artifactId>
                <version>${ant.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>compile</scope>
            </dependency>
            <!-- junittoolbox gives us improved JUnit - things like wildcards in @SuiteClasses -->
            <dependency>
                <groupId>com.googlecode.junit-toolbox</groupId>
                <artifactId>junit-toolbox</artifactId>
                <version>${junit-toolbox.version}</version>
            </dependency>

            <!-- bring in a parameterized Runner -->
            <dependency>
                <groupId>pl.pragmatists</groupId>
                <artifactId>JUnitParams</artifactId>
                <version>${junitparams.version}</version>
            </dependency>

            <!-- test assertion on JSON data -->
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${jsonassert.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- the best general assertions library :) -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.core.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- tap4j ext will bring in tap4j for us -->
            <dependency>
                <groupId>org.tap4j</groupId>
                <artifactId>tap4j-ext</artifactId>
                <version>${tap4j-ext.version}</version>
            </dependency>

            <!-- may need this because of hardcodedpath in the CRaSH POM embedded in Sping Boot -->
            <!-- see http://stackoverflow.com/questions/29821920/weird-issue-running-maven-site-problems-were-encountered-while-processing-the-p -->
<!--            <dependency>
                <groupId>com.sun</groupId>
                <artifactId>tools</artifactId>
                <version>1.8</version>
                <scope>system</scope>
                <systemPath>${java.home}/../lib/tools.jar</systemPath>
                <optional>true</optional>
            </dependency>-->

            <!-- bring in snapshot BCEL to get around "invalid .. constant"
            error during dependency report build -->
            <dependency>
                <groupId>org.apache.bcel</groupId>
                <artifactId>bcel</artifactId>
                <version>${bcel.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>


            <!--TODO - make switch between local and github driven by config variable-->
            <!--Uncomment to use local schema build-->
            <!-- <dependency>
                <groupId>org.ga4gh</groupId>
                <artifactId>ga4gh-schemas</artifactId>
                <version>${ga4gh.schema.version}</version>
            </dependency> -->

            <!--Comment to use local schema build-->
            <dependency>
                <groupId>com.github.ga4gh</groupId>
                <artifactId>schemas</artifactId>
                <version>${ga4gh.schemas.version}</version>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.2.5,)</version>
                                    <message>*** This project requires Maven 3.2.5 or later. This is version ${maven.version}. ***</message>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[1.8,)</version>
                                    <message>*** This project requires JDK 1.8 (J2SE 8) or later. This is version ${java.version}. }***</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.5.5</version>
                    <configuration>
                        <descriptors>
                            <descriptor>src/assembly/dist.xml</descriptor>
                        </descriptors>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.18.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>2.5</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>2.18.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.3</version>
                    <configuration>
                        <additionalparam>-Xdoclint:none</additionalparam>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


    <!-- parent sets plugin versions -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven.project.info.reports.version}</version>
                <configuration>
                    <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>summary</report>
                            <report>project-team</report>
                            <report>issue-tracking</report>
                            <report>license</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
