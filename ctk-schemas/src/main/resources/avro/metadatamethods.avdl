@namespace("org.ga4gh.methods")

protocol MetadataMethods {

import idl "metadata.avdl";
import idl "common.avdl";
import idl "methods.avdl";

/******************  /datasets/search  *********************/
/**
This request maps to the body of `POST /datasets/search` as JSON.
*/
record SearchDatasetsRequest {

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /datasets/search` expressed as JSON.
*/
record SearchDatasetsResponse {
  /** The list of datasets. */
  array<org.ga4gh.models.Dataset> datasets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of datasets accessible through the API.

TODO: Reads and variants both want to have datasets. Are they the same object?

`POST /datasets/search` must accept a JSON version of
`SearchDatasetsRequest` as the post body and will return a JSON version
of `SearchDatasetsResponse`.
*/
SearchDatasetsResponse searchDatasets(
  /**
  This request maps to the body of `POST /datasets/search` as JSON.
  */
  SearchDatasetsRequest request) throws GAException;

/****************  /datasets/{id}  *******************/
/**
Gets a `Dataset` by ID.
`GET /datasets/{id}` will return a JSON version of `Dataset`.
*/
org.ga4gh.models.Dataset getDataset(
  /**
  The ID of the `Dataset`.
  */
  string id) throws GAException;

}