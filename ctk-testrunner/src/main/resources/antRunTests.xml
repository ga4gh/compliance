<project default="reports"
         xmlns:if="ant:if" xmlns:unless="ant:unless">
    <description>This runs tests for the GA4GH CTK</description>
    <!-- Define the classpath which includes the junit.jar and the classes after compiling-->
    <target name="diagnostics" description="diagnostics">
        <diagnostics/>
    </target>

    <target name="make-directories">
        <mkdir dir="${ctk.todir}"/>
        <mkdir dir="${ctk.todir}/lib"/>
        <mkdir dir="${ctk.todir}/report"/>
        <mkdir dir="${ctk.todir}/report/html"/>
    </target>

    <target name="make-test-jar" depends="make-directories">
        <!-- build unified test jar file; eliminating dups and preserve
            order so that newly-compiled classes are not overwritten by the
            precompiled test jar, so you can write/compile one new test
            at a time without re-building the test module -->
        <!-- note that this also leaves a retainable copy of test classes
             with each test run -->
        <jar destfile="${ctk.todir}/lib/packedup-tests.jar"
             duplicate="preserve">
            <zipfileset src="${ctk.testjar}"
                        erroronmissingarchive="false"/>
            <multirootfileset basedirs="${ctk.testclassroots}"
                              type="both"
                              erroronmissingdir="false"/>
        </jar>
    </target>

    <path id="packedup-tests-jar.path" location="${ctk.todir}/lib/packedup-tests.jar" />

    <target name="test-if-classpath-ok">
        <!-- we pick a sample class which should be visible; if it's not, the tests won't run
             and the AntExecListener log will show this isn't here, which signals it's a classpath issue -->
        <available classname="org.ga4gh.ctk.TestExecListener" property="tel.Present"/>
        <echo level="error" unless:true="${tel.Present}"
              message="WILL SKIP ALL TESTS due to junit classpath problem, can't find example class TestExecListener"/>
    </target>

    <target name="tests" if:true="tel.Present" depends="test-if-classpath-ok, make-directories, make-test-jar">
        <junit printsummary="on" fork="off" filtertrace="on"
               haltonfailure="false" showoutput="false"
               enableTestListenerEvents="false">
            <!-- map any properties on to the java Syste,.getProperties() for the test classes -->
            <syspropertyset>
                <propertyref prefix="ctk"/>
                <propertyref prefix="cts"/>
            </syspropertyset>

            <!-- "When you specify a nested <classpath> in Ant,
                 Ant creates a new class loader that uses the path you have specified.
                 It then tries to load additional classes from this classloader." : Apache Ant FAQ
                 So, since we need to set a classpath to see the new packedup-tests.jar,
                 we need to bolt on the parent classloader (java class path). Note that the
                 parent loader has to be the Spring loader so it can dig out the nested jars
                 of the maven modules (ctk-testrunner, etc). -->
            <classpath>
                <pathelement location="${ctk.todir}/lib/packedup-tests.jar"/>
                <pathelement path="${java.class.path}"/>
            </classpath>

            <batchtest fork="off" skipNonTests="true" todir="${ctk.todir}">
                <zipfileset src="${ctk.todir}/lib/packedup-tests.jar" includes="${ctk.matchstr}"
                            erroronmissingarchive="true"/>
            </batchtest>
            <formatter type="xml"/>
            <formatter type="brief"/>
            <!-- this "formatter" just bridges junit events to the CTK log -->
            <formatter classname="org.ga4gh.ctk.TestExecListener"/>
        </junit>
    </target>

    <target name="echo-props" depends="make-directories">
        <echoproperties destfile="${ctk.todir}/asused.properties">
            <propertyset>
                <propertyref prefix="user.dir"/>
                <propertyref prefix="ctk."/>
                <propertyref prefix="cts."/>
                <propertyref prefix="java."/>
            </propertyset>
        </echoproperties>
        <echoproperties>
            <propertyset>
                <propertyref prefix="user.dir"/>
                <propertyref prefix="ctk."/>
                <propertyref prefix="cts."/>
            </propertyset>
        </echoproperties>
        <pathconvert pathsep="${line.separator}|  |--"
                     property="echo.test.classes"
                     refid="packedup-tests-jar.path"></pathconvert>
        <!-- Echo's 'level': Control the level at which this message is reported.
       One of "error", "warning", "info", "verbose", "debug" (decreasing order) -->
        <echo level="debug">${echo.test.classes}</echo>
    </target>

    <target name="reports" depends="echo-props, make-directories, tests">
        <junitreport todir="${ctk.todir}/report">
            <fileset dir="${ctk.todir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${ctk.todir}/report/html">
                <param name="TITLE" expression="${ctk.reporttitle}"/>
            </report>
        </junitreport>
    </target>
</project>
